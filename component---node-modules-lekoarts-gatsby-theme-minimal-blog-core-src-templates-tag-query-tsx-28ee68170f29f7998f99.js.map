{"version":3,"file":"component---node-modules-lekoarts-gatsby-theme-minimal-blog-core-src-templates-tag-query-tsx-28ee68170f29f7998f99.js","mappings":"oQA8DA,EAhCY,SAAC,GAAsC,IAApCA,EAAmC,EAAnCA,MAAOC,EAA4B,EAA5BA,YACpB,GAA+BC,EAAAA,EAAAA,KAAvBC,EAAR,EAAQA,SAAUC,EAAlB,EAAkBA,SAElB,OACE,QAAC,IAAD,MACE,QAAC,IAAD,CAAKC,MAAK,QAAUJ,EAAYK,QAChC,QAAC,KAAD,CACEC,GAAI,CACFC,WAAW,SACXC,eAAe,gBACfC,SAAS,UAGX,QAAC,KAAD,CAASC,GAAG,KAAKC,QAAQ,YAAYL,GAAI,CAAEM,QAAS,IACjDZ,EAAYK,OAEf,QAAC,KAAD,CACEK,GAAIG,EAAAA,KACJP,GAAI,CACFK,QAAQ,kBACRC,QAAS,GAEXE,IAAIC,EAAAA,EAAAA,GAAe,IAAIZ,EAAL,IAAiBD,IANrC,mBAWF,QAAC,IAAD,CAASH,MAAOA,EAAOO,GAAI,CAAEU,GAAI,CAAC,EAAG,QCtD3C,MCce,YAAkD,IAAjBC,EAAgB,oBAEpDC,EACND,EADFE,KAAQD,QAGV,OAAO,gBAAC,EAAD,eAAKnB,MAAOmB,EAAQE,OAAWH,M,oECWxC,IApBiB,SAAC,GAAyB,IAAvBI,EAAsB,EAAtBA,KAClB,GAA+BpB,EAAAA,EAAAA,KAAvBC,EAAR,EAAQA,SAAUC,EAAlB,EAAkBA,SAElB,OACE,gBAAC,WAAD,KACGkB,EAAKC,KAAI,SAACC,EAAKC,GAAN,OACR,gBAAC,WAAD,CAAgBC,IAAKF,EAAIG,QACpBF,GAAF,IACD,gBAAC,KAAD,CACElB,GAAI,CAAEK,QAAQ,aACdG,IAAIC,EAAAA,EAAAA,GAAe,IAAIZ,EAAL,IAAiBD,EAAjB,IAA6BqB,EAAIG,OAElDH,EAAIlB,a,0JCDXsB,GAAYC,EAAAA,EAAAA,GAAOC,EAAAA,GAAPD,CAAH,mIAOTE,GAAcF,EAAAA,EAAAA,GAAOG,EAAAA,GAAPH,CAAH,+NAWXI,EAAoBJ,EAAAA,EAAAA,EAAH,2MAuDvB,EA7CqB,SAAC,GAAD,IAAGK,EAAH,EAAGA,KAAH,IAASC,SAAAA,OAAT,gBACnB,QAACP,EAAD,MACE,QAACG,EAAD,CACEpB,GAAIG,EAAAA,KACJC,GAAImB,EAAKP,KACTpB,GAAI,CAAE6B,SAAU,CAAC,EAAG,EAAG,GAAIC,MAAM,SAEhCH,EAAK7B,QAER,aACEE,GAAI,CACF8B,MAAM,UACNpB,GAAI,EACJqB,EAAG,CAAED,MAAM,aACXD,SAAU,CAAC,GAAK,GAAK,OAGvB,gBACE7B,GAAI,CACFgC,gBAAiB,UACjBC,QAAS,MACTC,YAAa,MACbC,aAAc,QAGfR,EAAKS,MAEPT,EAAKZ,MAAQa,IACZ,QAAC,WAAD,MACE,QAAC,IAAD,CAAUb,KAAMY,EAAKZ,UAI3B,QAACW,EAAD,CACE1B,GAAI,CACF8B,MAAM,YACNpB,GAAI,EACJqB,EAAG,CAAED,MAAM,eAGZH,EAAKU,eCnENC,EAAgBhB,EAAAA,EAAAA,QAAH,0GAqBnB,EAhBgB,SAAC,GAA8D,IAA5D7B,EAA2D,EAA3DA,MAA2D,IAApD8C,UAAAA,OAAoD,eAApCX,SAAAA,OAAoC,SACrEY,GAAaC,EAAAA,EAAAA,MAApB,GAEA,OACE,QAACH,EAAD,CACEI,OAAsB,SAAdF,EACRxC,GAAI,CAAE2C,GAAI,CAAC,EAAG,EAAG,IACjBJ,UAAWA,GAEV9C,EAAMuB,KAAI,SAACW,GAAD,OACT,QAAC,EAAD,CAAcR,IAAKQ,EAAKP,KAAMO,KAAMA,EAAMC,SAAUA","sources":["webpack://minimal-blog/./src/@lekoarts/gatsby-theme-minimal-blog/components/tag.tsx","webpack://minimal-blog/./node_modules/@lekoarts/gatsby-theme-minimal-blog-core/src/templates/tag-query.tsx","webpack://minimal-blog/./src/@lekoarts/gatsby-theme-minimal-blog/@lekoarts/gatsby-theme-minimal-blog-core/components/tag.tsx","webpack://minimal-blog/./src/@lekoarts/gatsby-theme-minimal-blog/components/item-tags.tsx","webpack://minimal-blog/./src/@lekoarts/gatsby-theme-minimal-blog/components/blog-list-item.tsx","webpack://minimal-blog/./src/@lekoarts/gatsby-theme-minimal-blog/components/listing.tsx"],"sourcesContent":["/** @jsx jsx */\nimport { jsx, Heading, Link as TLink, Flex } from \"theme-ui\";\nimport { Link } from \"gatsby\";\nimport Layout from \"./layout\";\nimport useMinimalBlogConfig from \"../hooks/use-minimal-blog-config\";\nimport Listing from \"./listing\";\nimport replaceSlashes from \"../utils/replaceSlashes\";\nimport Seo from \"./seo\";\n\ntype TagProps = {\n  posts: {\n    slug: string;\n    title: string;\n    date: string;\n    excerpt: string;\n    description: string;\n    timeToRead?: number;\n    tags: {\n      name: string;\n      slug: string;\n    }[];\n  }[];\n  pageContext: {\n    isCreatedByStatefulCreatePages: boolean;\n    slug: string;\n    name: string;\n    [key: string]: any;\n  };\n};\n\nconst Tag = ({ posts, pageContext }: TagProps) => {\n  const { tagsPath, basePath } = useMinimalBlogConfig();\n\n  return (\n    <Layout>\n      <Seo title={`Tag: ${pageContext.name}`} />\n      <Flex\n        sx={{\n          alignItems: `center`,\n          justifyContent: `space-between`,\n          flexFlow: `wrap`,\n        }}\n      >\n        <Heading as=\"h1\" variant=\"styles.h1\" sx={{ marginY: 2 }}>\n          {pageContext.name}\n        </Heading>\n        <TLink\n          as={Link}\n          sx={{\n            variant: `links.secondary`,\n            marginY: 2,\n          }}\n          to={replaceSlashes(`/${basePath}/${tagsPath}`)}\n        >\n          View all tags\n        </TLink>\n      </Flex>\n      <Listing posts={posts} sx={{ mt: [4, 5] }} />\n    </Layout>\n  );\n};\n\nexport default Tag;\n","import { graphql } from \"gatsby\"\nimport TagComponent from \"../components/tag\"\n\nexport default TagComponent\n\nexport const query = graphql`\n  query ($slug: String!, $formatString: String!) {\n    allPost(sort: { fields: date, order: DESC }, filter: { tags: { elemMatch: { slug: { eq: $slug } } } }) {\n      nodes {\n        slug\n        title\n        date(formatString: $formatString)\n        excerpt\n        timeToRead\n        description\n        tags {\n          name\n          slug\n        }\n      }\n    }\n  }\n`\n","import * as React from \"react\"\nimport Tag from \"../../../components/tag\"\n\ntype Props = {\n  data: {\n    allPost: any\n    [key: string]: any\n  }\n  pageContext: {\n    isCreatedByStatefulCreatePages: boolean\n    slug: string\n    name: string\n    [key: string]: any\n  }\n  [key: string]: any\n}\n\nexport default function MinimalBlogCoreTag({ ...props }: Props) {\n  const {\n    data: { allPost },\n  } = props\n\n  return <Tag posts={allPost.nodes} {...props} />\n}\n","import * as React from \"react\";\nimport { Link as TLink } from \"theme-ui\";\nimport { Link } from \"gatsby\";\nimport useMinimalBlogConfig from \"../hooks/use-minimal-blog-config\";\nimport replaceSlashes from \"../utils/replaceSlashes\";\n\ntype TagsProps = {\n  tags: {\n    name: string;\n    slug: string;\n  }[];\n};\n\nconst ItemTags = ({ tags }: TagsProps) => {\n  const { tagsPath, basePath } = useMinimalBlogConfig();\n\n  return (\n    <React.Fragment>\n      {tags.map((tag, i) => (\n        <React.Fragment key={tag.slug}>\n          {!!i && ` `}\n          <TLink\n            sx={{ variant: `links.tag` }}\n            to={replaceSlashes(`/${basePath}/${tagsPath}/${tag.slug}`)}\n          >\n            {tag.name}\n          </TLink>\n        </React.Fragment>\n      ))}\n    </React.Fragment>\n  );\n};\n\nexport default ItemTags;\n","/** @jsx jsx */\nimport * as React from \"react\";\nimport { jsx, Link as TLink, Box } from \"theme-ui\";\nimport { Link } from \"gatsby\";\nimport ItemTags from \"./item-tags\";\nimport styled from \"@emotion/styled\";\nimport Spacer from \"./Common/Spacer\";\n\ntype BlogListItemProps = {\n  post: {\n    slug: string;\n    title: string;\n    date: string;\n    excerpt: string;\n    description: string;\n    timeToRead?: number;\n    tags?: {\n      name: string;\n      slug: string;\n    }[];\n  };\n  showTags?: boolean;\n};\n\nconst StyledBox = styled(Box)`\n  margin-bottom: 0;\n  /* border-bottom: 1px solid black; */\n  min-height: 135px;\n  padding: 24px 12px;\n`;\n\nconst StyledTLink = styled(TLink)`\n  display: block;\n  font-weight: 700;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  display: -webkit-box;\n  -webkit-line-clamp: 2;\n  -webkit-box-orient: vertical;\n  word-wrap: break-word;\n`;\n\nconst StyledDescription = styled.p`\n  overflow: hidden;\n  text-overflow: ellipsis;\n  display: -webkit-box;\n  -webkit-line-clamp: 1;\n  -webkit-box-orient: vertical;\n  word-wrap: break-word;\n  font-size: 14px;\n`;\n\nconst BlogListItem = ({ post, showTags = true }: BlogListItemProps) => (\n  <StyledBox>\n    <StyledTLink\n      as={Link}\n      to={post.slug}\n      sx={{ fontSize: [2, 3, 3], color: `text` }}\n    >\n      {post.title}\n    </StyledTLink>\n    <p\n      sx={{\n        color: `#2d3748`,\n        mt: 1,\n        a: { color: `secondary` },\n        fontSize: [0.5, 0.5, 0.5],\n      }}\n    >\n      <time\n        sx={{\n          backgroundColor: \"#feb2b2\",\n          padding: \"4px\",\n          marginRight: \"2px\",\n          borderRadius: \"2px\",\n        }}\n      >\n        {post.date}\n      </time>\n      {post.tags && showTags && (\n        <React.Fragment>\n          <ItemTags tags={post.tags} />\n        </React.Fragment>\n      )}\n    </p>\n    <StyledDescription\n      sx={{\n        color: `secondary`,\n        mt: 2,\n        a: { color: `secondary` },\n      }}\n    >\n      {post.description}\n    </StyledDescription>\n  </StyledBox>\n);\n\nexport default BlogListItem;\n","/** @jsx jsx */\nimport { jsx, useColorMode } from \"theme-ui\";\nimport BlogListItem from \"./blog-list-item\";\nimport styled from \"@emotion/styled\";\n\ntype StyledListingProps = {\n  isDark: boolean;\n};\n\ntype ListingProps = {\n  posts: {\n    slug: string;\n    title: string;\n    date: string;\n    excerpt: string;\n    description: string;\n    timeToRead?: number;\n    tags?: {\n      name: string;\n      slug: string;\n    }[];\n  }[];\n  className?: string;\n  showTags?: boolean;\n};\nconst StyledListing = styled.section<StyledListingProps>`\n  /* box-shadow: 0px 2px 20px rgba(62, 74, 107, 0.1); */\n  border-radius: 16px;\n`;\n\nconst Listing = ({ posts, className = ``, showTags = true }: ListingProps) => {\n  const [colorMode] = useColorMode();\n\n  return (\n    <StyledListing\n      isDark={colorMode === \"dark\"}\n      sx={{ mb: [5, 6, 7] }}\n      className={className}\n    >\n      {posts.map((post) => (\n        <BlogListItem key={post.slug} post={post} showTags={showTags} />\n      ))}\n    </StyledListing>\n  );\n};\n\nexport default Listing;\n"],"names":["posts","pageContext","useMinimalBlogConfig","tagsPath","basePath","title","name","sx","alignItems","justifyContent","flexFlow","as","variant","marginY","Link","to","replaceSlashes","mt","props","allPost","data","nodes","tags","map","tag","i","key","slug","StyledBox","styled","Box","StyledTLink","TLink","StyledDescription","post","showTags","fontSize","color","a","backgroundColor","padding","marginRight","borderRadius","date","description","StyledListing","className","colorMode","useColorMode","isDark","mb"],"sourceRoot":""}