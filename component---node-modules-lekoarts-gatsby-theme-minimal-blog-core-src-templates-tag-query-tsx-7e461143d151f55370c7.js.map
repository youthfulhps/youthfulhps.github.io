{"version":3,"sources":["webpack://minimal-blog/./src/@lekoarts/gatsby-theme-minimal-blog/components/tag.tsx","webpack://minimal-blog/./node_modules/@lekoarts/gatsby-theme-minimal-blog-core/src/templates/tag-query.tsx","webpack://minimal-blog/./src/@lekoarts/gatsby-theme-minimal-blog/@lekoarts/gatsby-theme-minimal-blog-core/components/tag.tsx","webpack://minimal-blog/./src/@lekoarts/gatsby-theme-minimal-blog/components/item-tags.tsx","webpack://minimal-blog/./src/@lekoarts/gatsby-theme-minimal-blog/components/blog-list-item.tsx","webpack://minimal-blog/./src/@lekoarts/gatsby-theme-minimal-blog/components/listing.tsx"],"names":["posts","pageContext","useMinimalBlogConfig","tagsPath","basePath","title","name","sx","alignItems","justifyContent","flexFlow","as","variant","marginY","Link","to","replaceSlashes","mt","props","allPost","data","nodes","tags","map","tag","i","key","slug","post","showTags","mb","fontSize","color","a","date","StyledListing","styled","isDark","className","colorMode","useColorMode"],"mappings":"oQAqDA,EAvBY,SAAC,GAAsC,IAApCA,EAAmC,EAAnCA,MAAOC,EAA4B,EAA5BA,YACpB,GAA+BC,SAAvBC,EAAR,EAAQA,SAAUC,EAAlB,EAAkBA,SAElB,OACE,QAAC,IAAD,MACE,QAAC,IAAD,CAAKC,MAAK,QAAUJ,EAAYK,QAChC,QAAC,KAAD,CAAMC,GAAI,CAAEC,WAAW,SAAWC,eAAe,gBAAkBC,SAAS,UAC1E,QAAC,KAAD,CAASC,GAAG,KAAKC,QAAQ,YAAYL,GAAI,CAAEM,QAAS,IACjDZ,EAAYK,OAEf,QAAC,KAAD,CACEK,GAAIG,OACJP,GAAI,CAAEK,QAAQ,kBAAoBC,QAAS,GAC3CE,IAAIC,OAAe,IAAIZ,EAAL,IAAiBD,IAHrC,mBAQF,QAAC,IAAD,CAASH,MAAOA,EAAOO,GAAI,CAAEU,GAAI,CAAC,EAAG,QC7C3C,MCce,YAAkD,IAAjBC,EAAgB,oBAEpDC,EACND,EADFE,KAAQD,QAGV,OAAO,gBAAC,EAAD,eAAKnB,MAAOmB,EAAQE,OAAWH,M,4FCQxC,IAjBiB,SAAC,GAAyB,IAAvBI,EAAsB,EAAtBA,KAClB,GAA+BpB,SAAvBC,EAAR,EAAQA,SAAUC,EAAlB,EAAkBA,SAElB,OACE,gBAAC,WAAD,KACGkB,EAAKC,KAAI,SAACC,EAAKC,GAAN,OACR,gBAAC,WAAD,CAAgBC,IAAKF,EAAIG,QACpBF,GAAF,KACD,gBAAC,KAAD,CAAOd,GAAIG,OAAMC,IAAIC,OAAe,IAAIZ,EAAL,IAAiBD,EAAjB,IAA6BqB,EAAIG,OACjEH,EAAIlB,a,sJCiBjB,EAjBqB,SAAC,GAAD,IAAGsB,EAAH,EAAGA,KAAH,IAASC,gBAAT,gBACnB,QAAC,KAAD,CAAKC,GAAI,IACP,QAAC,KAAD,CAAOnB,GAAIG,OAAMC,GAAIa,EAAKD,KAAMpB,GAAI,CAAEwB,SAAU,CAAC,EAAG,EAAG,GAAIC,MAAM,SAC9DJ,EAAKvB,QAER,aAAGE,GAAI,CAAEyB,MAAM,YAAcf,GAAI,EAAGgB,EAAG,CAAED,MAAM,aAAgBD,SAAU,CAAC,EAAG,EAAG,MAC9E,oBAAOH,EAAKM,MACXN,EAAKN,MAAQO,IACZ,QAAC,WAAD,YAEE,QAAC,IAAD,CAAUP,KAAMM,EAAKN,WCPzBa,E,SAAgBC,UAAH,4CACH,qBAAGC,QAAa,aAmBhC,EAhBgB,SAAC,GAA8D,IAA5DrC,EAA2D,EAA3DA,MAA2D,IAApDsC,iBAAoD,eAApCT,gBAAoC,SACrEU,GAAaC,UAApB,GAEA,OACE,QAACL,EAAD,CACEE,OAAsB,SAAdE,EACRhC,GAAI,CAAEuB,GAAI,CAAC,EAAG,EAAG,IACjBQ,UAAWA,GAEVtC,EAAMuB,KAAI,SAACK,GAAD,OACT,QAAC,EAAD,CAAcF,IAAKE,EAAKD,KAAMC,KAAMA,EAAMC,SAAUA","file":"component---node-modules-lekoarts-gatsby-theme-minimal-blog-core-src-templates-tag-query-tsx-7e461143d151f55370c7.js","sourcesContent":["/** @jsx jsx */\nimport { jsx, Heading, Link as TLink, Flex } from \"theme-ui\"\nimport { Link } from \"gatsby\"\nimport Layout from \"./layout\"\nimport useMinimalBlogConfig from \"../hooks/use-minimal-blog-config\"\nimport Listing from \"./listing\"\nimport replaceSlashes from \"../utils/replaceSlashes\"\nimport Seo from \"./seo\"\n\ntype TagProps = {\n  posts: {\n    slug: string\n    title: string\n    date: string\n    excerpt: string\n    description: string\n    timeToRead?: number\n    tags: {\n      name: string\n      slug: string\n    }[]\n  }[]\n  pageContext: {\n    isCreatedByStatefulCreatePages: boolean\n    slug: string\n    name: string\n    [key: string]: any\n  }\n}\n\nconst Tag = ({ posts, pageContext }: TagProps) => {\n  const { tagsPath, basePath } = useMinimalBlogConfig()\n\n  return (\n    <Layout>\n      <Seo title={`Tag: ${pageContext.name}`} />\n      <Flex sx={{ alignItems: `center`, justifyContent: `space-between`, flexFlow: `wrap` }}>\n        <Heading as=\"h1\" variant=\"styles.h1\" sx={{ marginY: 2 }}>\n          {pageContext.name}\n        </Heading>\n        <TLink\n          as={Link}\n          sx={{ variant: `links.secondary`, marginY: 2 }}\n          to={replaceSlashes(`/${basePath}/${tagsPath}`)}\n        >\n          View all tags\n        </TLink>\n      </Flex>\n      <Listing posts={posts} sx={{ mt: [4, 5] }} />\n    </Layout>\n  )\n}\n\nexport default Tag\n","import { graphql } from \"gatsby\"\nimport TagComponent from \"../components/tag\"\n\nexport default TagComponent\n\nexport const query = graphql`\n  query ($slug: String!, $formatString: String!) {\n    allPost(sort: { fields: date, order: DESC }, filter: { tags: { elemMatch: { slug: { eq: $slug } } } }) {\n      nodes {\n        slug\n        title\n        date(formatString: $formatString)\n        excerpt\n        timeToRead\n        description\n        tags {\n          name\n          slug\n        }\n      }\n    }\n  }\n`\n","import * as React from \"react\"\nimport Tag from \"../../../components/tag\"\n\ntype Props = {\n  data: {\n    allPost: any\n    [key: string]: any\n  }\n  pageContext: {\n    isCreatedByStatefulCreatePages: boolean\n    slug: string\n    name: string\n    [key: string]: any\n  }\n  [key: string]: any\n}\n\nexport default function MinimalBlogCoreTag({ ...props }: Props) {\n  const {\n    data: { allPost },\n  } = props\n\n  return <Tag posts={allPost.nodes} {...props} />\n}\n","import * as React from \"react\"\nimport { Link as TLink } from \"theme-ui\"\nimport { Link } from \"gatsby\"\nimport useMinimalBlogConfig from \"../hooks/use-minimal-blog-config\"\nimport replaceSlashes from \"../utils/replaceSlashes\"\n\ntype TagsProps = {\n  tags: {\n    name: string\n    slug: string\n  }[]\n}\n\nconst ItemTags = ({ tags }: TagsProps) => {\n  const { tagsPath, basePath } = useMinimalBlogConfig()\n\n  return (\n    <React.Fragment>\n      {tags.map((tag, i) => (\n        <React.Fragment key={tag.slug}>\n          {!!i && `, `}\n          <TLink as={Link} to={replaceSlashes(`/${basePath}/${tagsPath}/${tag.slug}`)}>\n            {tag.name}\n          </TLink>\n        </React.Fragment>\n      ))}\n    </React.Fragment>\n  )\n}\n\nexport default ItemTags\n","/** @jsx jsx */\nimport * as React from \"react\"\nimport { jsx, Link as TLink, Box } from \"theme-ui\"\nimport { Link } from \"gatsby\"\nimport ItemTags from \"./item-tags\"\n\ntype BlogListItemProps = {\n  post: {\n    slug: string\n    title: string\n    date: string\n    excerpt: string\n    description: string\n    timeToRead?: number\n    tags?: {\n      name: string\n      slug: string\n    }[]\n  }\n  showTags?: boolean\n}\n\nconst BlogListItem = ({ post, showTags = true }: BlogListItemProps) => (\n  <Box mb={4}>\n    <TLink as={Link} to={post.slug} sx={{ fontSize: [1, 2, 3], color: `text` }}>\n      {post.title}\n    </TLink>\n    <p sx={{ color: `secondary`, mt: 1, a: { color: `secondary` }, fontSize: [1, 1, 2] }}>\n      <time>{post.date}</time>\n      {post.tags && showTags && (\n        <React.Fragment>\n          {` â€” `}\n          <ItemTags tags={post.tags} />\n        </React.Fragment>\n      )}\n    </p>\n  </Box>\n)\n\nexport default BlogListItem\n","/** @jsx jsx */\nimport { jsx, useColorMode } from \"theme-ui\";\nimport BlogListItem from \"./blog-list-item\";\nimport styled from \"@emotion/styled\";\n\ntype StyledListingProps = {\n  isDark: boolean;\n};\n\ntype ListingProps = {\n  posts: {\n    slug: string;\n    title: string;\n    date: string;\n    excerpt: string;\n    description: string;\n    timeToRead?: number;\n    tags?: {\n      name: string;\n      slug: string;\n    }[];\n  }[];\n  className?: string;\n  showTags?: boolean;\n};\nconst StyledListing = styled.section<StyledListingProps>`\n  background: ${({ isDark }) => !isDark && `#ffffff`};\n`;\n\nconst Listing = ({ posts, className = ``, showTags = true }: ListingProps) => {\n  const [colorMode] = useColorMode();\n\n  return (\n    <StyledListing\n      isDark={colorMode === \"dark\"}\n      sx={{ mb: [5, 6, 7] }}\n      className={className}\n    >\n      {posts.map((post) => (\n        <BlogListItem key={post.slug} post={post} showTags={showTags} />\n      ))}\n    </StyledListing>\n  );\n};\n\nexport default Listing;\n"],"sourceRoot":""}