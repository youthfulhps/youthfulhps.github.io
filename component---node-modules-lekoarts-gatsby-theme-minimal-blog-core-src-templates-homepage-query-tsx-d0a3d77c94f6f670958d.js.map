{"version":3,"sources":["webpack://minimal-blog/./src/@lekoarts/gatsby-theme-minimal-blog/components/homepage.tsx","webpack://minimal-blog/./node_modules/@lekoarts/gatsby-theme-minimal-blog-core/src/templates/homepage-query.tsx","webpack://minimal-blog/./src/@lekoarts/gatsby-theme-minimal-blog/@lekoarts/gatsby-theme-minimal-blog-core/components/homepage.tsx","webpack://minimal-blog/./src/@lekoarts/gatsby-theme-minimal-blog/components/Common/Spacer.tsx","webpack://minimal-blog/./src/@lekoarts/gatsby-theme-minimal-blog/components/item-tags.tsx","webpack://minimal-blog/./src/@lekoarts/gatsby-theme-minimal-blog/components/blog-list-item.tsx","webpack://minimal-blog/./src/@lekoarts/gatsby-theme-minimal-blog/components/listing.tsx"],"names":["posts","useMinimalBlogConfig","basePath","blogPath","siteTitle","useSiteMetadata","sx","visuallyHidden","Spacer","height","text","Link","to","replaceSlashes","showTags","props","allPost","data","nodes","StyledSpacer","styled","width","isColorSet","tags","tagsPath","map","tag","i","key","slug","as","name","StyledBox","Box","StyledTLink","TLink","StyledDescription","post","fontSize","color","title","mt","a","date","description","StyledListing","isDark","className","colorMode","useColorMode","mb"],"mappings":"0RA8CA,EAhBiB,SAAC,GAA2B,IAAzBA,EAAwB,EAAxBA,MAClB,GAA+BC,SAAvBC,EAAR,EAAQA,SAAUC,EAAlB,EAAkBA,SACVC,GAAcC,SAAdD,UAER,OACE,QAAC,IAAD,MACE,cAAIE,GAAIC,KAAiBH,IACzB,QAACI,EAAA,EAAD,CAAQC,OAAQ,MAChB,QAAC,IAAD,CAAOC,KAAK,QACV,QAAC,EAAAC,KAAD,CAAMC,IAAIC,OAAe,IAAIX,EAAL,IAAiBC,IAAzC,YAEF,QAAC,IAAD,CAASH,MAAOA,EAAOc,UAAU,MCtCvC,MCQe,YAAuD,IAAjBC,EAAgB,oBAEzDC,EACND,EADFE,KAAQD,QAGV,OAAO,gBAAC,EAAD,eAAUhB,MAAOgB,EAAQE,OAAWH,M,+DCJvCI,E,SAAeC,MAAH,kFACN,gBAAGX,EAAH,EAAGA,OAAH,OAAgBA,GAAaA,EAAP,QAClB,qBAAGA,QAAwB,UAChC,gBAAGY,EAAH,EAAGA,MAAH,OAAgBA,EAAWA,EAAN,KAAkB,UAC9C,qBAAGC,WACO,oDAOd,IAJA,YAAqE,IAAnDb,EAAkD,EAAlDA,OAAQY,EAA0C,EAA1CA,MAA0C,IAAnCC,kBAAmC,SAClE,OAAO,gBAACH,EAAD,CAAcV,OAAQA,EAAQY,MAAOA,EAAOC,WAAYA,M,4FCSjE,IAjBiB,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,KAClB,GAA+BtB,SAAvBuB,EAAR,EAAQA,SAAUtB,EAAlB,EAAkBA,SAElB,OACE,gBAAC,WAAD,KACGqB,EAAKE,KAAI,SAACC,EAAKC,GAAN,OACR,gBAAC,WAAD,CAAgBC,IAAKF,EAAIG,QACpBF,GAAF,KACD,gBAAC,KAAD,CAAOG,GAAInB,OAAMC,IAAIC,OAAe,IAAIX,EAAL,IAAiBsB,EAAjB,IAA6BE,EAAIG,OACjEH,EAAIK,a,uKCCXC,GAAYZ,OAAOa,KAAPb,CAAH,mIAOTc,GAAcd,OAAOe,KAAPf,CAAH,+NAWXgB,EAAoBhB,MAAH,2MA+CvB,EArCqB,SAAC,GAAD,IAAGiB,EAAH,EAAGA,KAAH,IAASvB,gBAAT,gBACnB,QAACkB,EAAD,MACE,QAACE,EAAD,CACEJ,GAAInB,OACJC,GAAIyB,EAAKR,KACTvB,GAAI,CAAEgC,SAAU,CAAC,EAAG,EAAG,GAAIC,MAAM,SAEhCF,EAAKG,QAER,aACElC,GAAI,CACFiC,MAAM,YACNE,GAAI,EACJC,EAAG,CAAEH,MAAM,aACXD,SAAU,CAAC,EAAG,EAAG,MAGnB,oBAAOD,EAAKM,MACXN,EAAKd,MAAQT,IACZ,QAAC,WAAD,YAEE,QAAC,IAAD,CAAUS,KAAMc,EAAKd,UAI3B,QAACa,EAAD,CACE9B,GAAI,CACFiC,MAAM,YACNE,GAAI,EACJC,EAAG,CAAEH,MAAM,eAGZF,EAAKO,eC1DNC,EAAgBzB,YAAH,8HACH,qBAAG0B,QAAa,aAqBhC,EAhBgB,SAAC,GAA8D,IAA5D9C,EAA2D,EAA3DA,MAA2D,IAApD+C,iBAAoD,eAApCjC,gBAAoC,SACrEkC,GAAaC,UAApB,GAEA,OACE,QAACJ,EAAD,CACEC,OAAsB,SAAdE,EACR1C,GAAI,CAAE4C,GAAI,CAAC,EAAG,EAAG,IACjBH,UAAWA,GAEV/C,EAAMyB,KAAI,SAACY,GAAD,OACT,QAAC,EAAD,CAAcT,IAAKS,EAAKR,KAAMQ,KAAMA,EAAMvB,SAAUA","file":"component---node-modules-lekoarts-gatsby-theme-minimal-blog-core-src-templates-homepage-query-tsx-d0a3d77c94f6f670958d.js","sourcesContent":["/** @jsx jsx */\nimport { jsx } from \"theme-ui\";\nimport { Link } from \"gatsby\";\nimport Layout from \"./layout\";\nimport Title from \"./title\";\nimport Listing from \"./listing\";\nimport List from \"./list\";\nimport styled from \"@emotion/styled\";\nimport useMinimalBlogConfig from \"../hooks/use-minimal-blog-config\";\nimport useSiteMetadata from \"../hooks/use-site-metadata\";\nimport replaceSlashes from \"../utils/replaceSlashes\";\nimport { visuallyHidden } from \"../styles/utils\";\nimport Spacer from \"./Common/Spacer\";\n\ntype PostsProps = {\n  posts: {\n    slug: string;\n    title: string;\n    date: string;\n    excerpt: string;\n    description: string;\n    timeToRead?: number;\n    tags?: {\n      name: string;\n      slug: string;\n    }[];\n  }[];\n  [key: string]: any;\n};\n\nconst Homepage = ({ posts }: PostsProps) => {\n  const { basePath, blogPath } = useMinimalBlogConfig();\n  const { siteTitle } = useSiteMetadata();\n\n  return (\n    <Layout>\n      <h1 sx={visuallyHidden}>{siteTitle}</h1>\n      <Spacer height={24} />\n      <Title text=\"최신글\">\n        <Link to={replaceSlashes(`/${basePath}/${blogPath}`)}>블로그 보기</Link>\n      </Title>\n      <Listing posts={posts} showTags={false} />\n    </Layout>\n  );\n};\n\nexport default Homepage;\n","import { graphql } from \"gatsby\"\nimport HomepageComponent from \"../components/homepage\"\n\nexport default HomepageComponent\n\nexport const query = graphql`\n  query ($formatString: String!) {\n    allPost(sort: { fields: date, order: DESC }, limit: 3) {\n      nodes {\n        slug\n        title\n        date(formatString: $formatString)\n        excerpt\n        timeToRead\n        description\n        tags {\n          name\n          slug\n        }\n      }\n    }\n  }\n`\n","import * as React from \"react\"\nimport Homepage from \"../../../components/homepage\"\n\ntype Props = {\n  data: {\n    allPost: any\n    [key: string]: string\n  }\n  [key: string]: any\n}\n\nexport default function MinimalBlogCoreHomepage({ ...props }: Props) {\n  const {\n    data: { allPost },\n  } = props\n\n  return <Homepage posts={allPost.nodes} {...props} />\n}\n","import React from \"react\";\nimport styled from \"@emotion/styled\";\n\ntype SpacerProps = {\n  /**여백의 높이 */\n  height?: number;\n  /**여백의 너비 */\n  width?: number;\n  /**여백의 색상 여부를 결정합니다. */\n  isColorSet?: boolean;\n};\n\nconst StyledSpacer = styled.div<SpacerProps>`\n  height: ${({ height }) => height && `${height}px`};\n  min-height: ${({ height }) => !height && \"100%\"};\n  width: ${({ width }) => (width ? `${width}px` : \"100%\")};\n  ${({ isColorSet }) =>\n    isColorSet ? `background-color: var(--element-light-gray)` : ``}\n`;\n\nfunction Spacer({ height, width, isColorSet = false }: SpacerProps) {\n  return <StyledSpacer height={height} width={width} isColorSet={isColorSet} />;\n}\n\nexport default Spacer;\n","import * as React from \"react\"\nimport { Link as TLink } from \"theme-ui\"\nimport { Link } from \"gatsby\"\nimport useMinimalBlogConfig from \"../hooks/use-minimal-blog-config\"\nimport replaceSlashes from \"../utils/replaceSlashes\"\n\ntype TagsProps = {\n  tags: {\n    name: string\n    slug: string\n  }[]\n}\n\nconst ItemTags = ({ tags }: TagsProps) => {\n  const { tagsPath, basePath } = useMinimalBlogConfig()\n\n  return (\n    <React.Fragment>\n      {tags.map((tag, i) => (\n        <React.Fragment key={tag.slug}>\n          {!!i && `, `}\n          <TLink as={Link} to={replaceSlashes(`/${basePath}/${tagsPath}/${tag.slug}`)}>\n            {tag.name}\n          </TLink>\n        </React.Fragment>\n      ))}\n    </React.Fragment>\n  )\n}\n\nexport default ItemTags\n","/** @jsx jsx */\nimport * as React from \"react\";\nimport { jsx, Link as TLink, Box } from \"theme-ui\";\nimport { Link } from \"gatsby\";\nimport ItemTags from \"./item-tags\";\nimport styled from \"@emotion/styled\";\n\ntype BlogListItemProps = {\n  post: {\n    slug: string;\n    title: string;\n    date: string;\n    excerpt: string;\n    description: string;\n    timeToRead?: number;\n    tags?: {\n      name: string;\n      slug: string;\n    }[];\n  };\n  showTags?: boolean;\n};\n\nconst StyledBox = styled(Box)`\n  margin-bottom: 0;\n  /* border-bottom: 1px solid black; */\n  min-height: 135px;\n  padding: 24px 12px;\n`;\n\nconst StyledTLink = styled(TLink)`\n  display: block;\n  font-weight: 700;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  display: -webkit-box;\n  -webkit-line-clamp: 2;\n  -webkit-box-orient: vertical;\n  word-wrap: break-word;\n`;\n\nconst StyledDescription = styled.p`\n  overflow: hidden;\n  text-overflow: ellipsis;\n  display: -webkit-box;\n  -webkit-line-clamp: 2;\n  -webkit-box-orient: vertical;\n  word-wrap: break-word;\n  font-size: 14px;\n`;\n\nconst BlogListItem = ({ post, showTags = true }: BlogListItemProps) => (\n  <StyledBox>\n    <StyledTLink\n      as={Link}\n      to={post.slug}\n      sx={{ fontSize: [1, 2, 3], color: `text` }}\n    >\n      {post.title}\n    </StyledTLink>\n    <p\n      sx={{\n        color: `secondary`,\n        mt: 1,\n        a: { color: `secondary` },\n        fontSize: [1, 1, 2],\n      }}\n    >\n      <time>{post.date}</time>\n      {post.tags && showTags && (\n        <React.Fragment>\n          {` — `}\n          <ItemTags tags={post.tags} />\n        </React.Fragment>\n      )}\n    </p>\n    <StyledDescription\n      sx={{\n        color: `secondary`,\n        mt: 1,\n        a: { color: `secondary` },\n      }}\n    >\n      {post.description}\n    </StyledDescription>\n  </StyledBox>\n);\n\nexport default BlogListItem;\n","/** @jsx jsx */\nimport { jsx, useColorMode } from \"theme-ui\";\nimport BlogListItem from \"./blog-list-item\";\nimport styled from \"@emotion/styled\";\n\ntype StyledListingProps = {\n  isDark: boolean;\n};\n\ntype ListingProps = {\n  posts: {\n    slug: string;\n    title: string;\n    date: string;\n    excerpt: string;\n    description: string;\n    timeToRead?: number;\n    tags?: {\n      name: string;\n      slug: string;\n    }[];\n  }[];\n  className?: string;\n  showTags?: boolean;\n};\nconst StyledListing = styled.section<StyledListingProps>`\n  background: ${({ isDark }) => !isDark && `#ffffff`};\n  /* box-shadow: 0px 2px 20px rgba(62, 74, 107, 0.1); */\n  border-radius: 16px;\n`;\n\nconst Listing = ({ posts, className = ``, showTags = true }: ListingProps) => {\n  const [colorMode] = useColorMode();\n\n  return (\n    <StyledListing\n      isDark={colorMode === \"dark\"}\n      sx={{ mb: [5, 6, 7] }}\n      className={className}\n    >\n      {posts.map((post) => (\n        <BlogListItem key={post.slug} post={post} showTags={showTags} />\n      ))}\n    </StyledListing>\n  );\n};\n\nexport default Listing;\n"],"sourceRoot":""}