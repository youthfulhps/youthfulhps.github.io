{"version":3,"sources":["webpack://minimal-blog/./src/@lekoarts/gatsby-theme-minimal-blog/components/list.tsx","webpack://minimal-blog/./src/@lekoarts/gatsby-theme-minimal-blog/components/Common/Spacer.tsx","webpack://minimal-blog/./src/@lekoarts/gatsby-theme-minimal-blog/assets/images/me.png","webpack://minimal-blog/./src/@lekoarts/gatsby-theme-minimal-blog/components/Common/Divider.tsx","webpack://minimal-blog/./src/@lekoarts/gatsby-theme-minimal-blog/components/Hero.tsx","webpack://minimal-blog/./src/@lekoarts/gatsby-theme-minimal-blog/texts/bottom.mdx","webpack://minimal-blog/./src/@lekoarts/gatsby-theme-minimal-blog/components/homepage.tsx","webpack://minimal-blog/./node_modules/@lekoarts/gatsby-theme-minimal-blog-core/src/templates/homepage-query.tsx","webpack://minimal-blog/./src/@lekoarts/gatsby-theme-minimal-blog/@lekoarts/gatsby-theme-minimal-blog-core/components/homepage.tsx","webpack://minimal-blog/./src/@lekoarts/gatsby-theme-minimal-blog/components/item-tags.tsx","webpack://minimal-blog/./src/@lekoarts/gatsby-theme-minimal-blog/components/blog-list-item.tsx","webpack://minimal-blog/./src/@lekoarts/gatsby-theme-minimal-blog/components/listing.tsx"],"names":["children","sx","mb","ul","margin","padding","li","listStyle","a","variant","StyledSpacer","styled","height","width","isColorSet","StyledDivider","StyledHeroHeaderWrapper","isDark","StyledHeroHeader","StyledProfileImage","StyledDescription","name","colorMode","useColorMode","src","Me","Title","props","console","warn","layoutProps","_frontmatter","MDXContent","components","mdxType","text","parentName","isMDXComponent","StyledLayout","Layout","posts","useMinimalBlogConfig","basePath","blogPath","p","fontSize","Link","to","replaceSlashes","showTags","allPost","data","nodes","tags","tagsPath","map","tag","i","key","slug","as","post","color","title","mt","date","StyledListing","className"],"mappings":"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","file":"component---node-modules-lekoarts-gatsby-theme-minimal-blog-core-src-templates-homepage-query-tsx-10625ea6da860ed2b12d.js","sourcesContent":["/** @jsx jsx */\nimport * as React from \"react\"\nimport { jsx } from \"theme-ui\"\n\ntype ListProps = {\n  children: React.ReactNode\n}\n\nconst List = ({ children }: ListProps) => (\n  <section\n    sx={{\n      mb: [5, 5, 6],\n      ul: { margin: 0, padding: 0 },\n      li: { listStyle: `none`, mb: 3 },\n      a: { variant: `links.listItem` },\n    }}\n  >\n    {children}\n  </section>\n)\n\nexport default List\n","import React from \"react\";\nimport styled from \"@emotion/styled\";\n\ntype SpacerProps = {\n  /**여백의 높이 */\n  height?: number;\n  /**여백의 너비 */\n  width?: number;\n  /**여백의 색상 여부를 결정합니다. */\n  isColorSet?: boolean;\n};\n\nconst StyledSpacer = styled.div<SpacerProps>`\n  height: ${({ height }) => height && `${height}px`};\n  min-height: ${({ height }) => !height && \"100%\"};\n  width: ${({ width }) => (width ? `${width}px` : \"100%\")};\n  ${({ isColorSet }) =>\n    isColorSet ? `background-color: var(--element-light-gray)` : ``}\n`;\n\nfunction Spacer({ height, width, isColorSet = false }: SpacerProps) {\n  return <StyledSpacer height={height} width={width} isColorSet={isColorSet} />;\n}\n\nexport default Spacer;\n","export default __webpack_public_path__ + \"static/me-310999d3a5bdf70958e837256fe1e262.png\";","import React from \"react\";\nimport styled from \"@emotion/styled\";\n\nconst StyledDivider = styled.div`\n  height: auto;\n  border-left: 3px solid black;\n`;\n\nfunction Divider() {\n  return <StyledDivider />;\n}\n\nexport default Divider;\n","import React from \"react\";\nimport styled from \"@emotion/styled\";\nimport Me from \"../assets/images/me.png\";\nimport Spacer from \"./Common/Spacer\";\nimport { useColorMode } from \"theme-ui\";\nimport Divider from \"./Common/Divider\";\n\ntype StyledHeroHeaderWrapperProps = {\n  isDark: boolean;\n};\n\nconst StyledHeroHeaderWrapper = styled.div<StyledHeroHeaderWrapperProps>`\n  display: flex;\n  justify-content: flex-start;\n  align-items: center;\n  /* border-radius: 32px; */\n  background: ${({ isDark }) => !isDark && `#FDFDFD`};\n  /* box-shadow: 0px 2px 30px rgba(62, 74, 107, 0.08); */\n  width: 100%;\n  /* padding: 32px; */\n`;\n\nconst StyledHeroHeader = styled.div`\n  font-size: 24px;\n  font-weight: bold;\n`;\n\nconst StyledProfileImage = styled.img`\n  /* border-radius: 30px; */\n`;\n\nconst StyledDescription = styled.div`\n  font-size: 16px;\n  color: var(--theme-ui-colors-secondary);\n`;\n\nfunction Hero() {\n  const [colorMode] = useColorMode();\n  return (\n    <>\n      <StyledHeroHeaderWrapper isDark={colorMode === \"dark\"}>\n        <StyledProfileImage src={Me} />\n        <Divider />\n        <Spacer width={32} />\n        <div>\n          <StyledHeroHeader>프론트엔드 개발자 유 병호</StyledHeroHeader>\n          <StyledDescription>\n            옛 장인들은 자신의 작품에 서명하는 것을 자랑스러워했습니다.\n          </StyledDescription>\n          <StyledDescription>가치 있는 개인 기록을 남깁니다.</StyledDescription>\n        </div>\n      </StyledHeroHeaderWrapper>\n    </>\n  );\n}\n\nexport default Hero;\n","import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst Title = makeShortcode(\"Title\");\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = \"wrapper\";\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <Title text=\"Projects\" mdxType=\"Title\" />\n    <ul>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"https://www.lekoarts.de/art/3d?utm_source=minimal-blog&utm_medium=Theme\"\n        }}>{`3D Art with Cinema4D`}</a></li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"https://www.lekoarts.de/art/photography?utm_source=minimal-blog&utm_medium=Theme\"\n        }}>{`Landscape Photography`}</a></li>\n    </ul>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      ","/** @jsx jsx */\nimport { jsx } from \"theme-ui\";\nimport { Link } from \"gatsby\";\nimport Layout from \"./layout\";\nimport Title from \"./title\";\nimport Listing from \"./listing\";\nimport List from \"./list\";\nimport useMinimalBlogConfig from \"../hooks/use-minimal-blog-config\";\nimport replaceSlashes from \"../utils/replaceSlashes\";\nimport Spacer from \"./Common/Spacer\";\nimport Hero from \"../components/Hero\";\nimport styled from \"@emotion/styled\";\n// @ts-ignore\nimport Bottom from \"../texts/bottom\";\n\ntype PostsProps = {\n  posts: {\n    slug: string;\n    title: string;\n    date: string;\n    excerpt: string;\n    description: string;\n    timeToRead?: number;\n    tags?: {\n      name: string;\n      slug: string;\n    }[];\n  }[];\n  [key: string]: any;\n};\n\nconst StyledLayout = styled(Layout)`\n  display: grid;\n  border-top: 1px solid black;\n  border-left: 1px solid black;\n\n  & > * {\n    border-bottom: 1px solid black;\n    border-right: 1px solid black;\n  }\n`;\n\nconst Homepage = ({ posts }: PostsProps) => {\n  const { basePath, blogPath } = useMinimalBlogConfig();\n\n  return (\n    <StyledLayout>\n      <section\n        sx={{\n          p: { fontSize: [1, 2, 3] },\n          variant: `section_hero`,\n        }}\n      >\n        <Hero />\n      </section>\n      <Spacer height={32} />\n      <Title text=\"BLOGS\">\n        <Link to={replaceSlashes(`/${basePath}/${blogPath}`)}>\n          Read all posts\n        </Link>\n      </Title>\n      <Listing posts={posts} showTags={false} />\n      <List sx={{ variant: `section_bottom` }}>\n        <Bottom />\n      </List>\n    </StyledLayout>\n  );\n};\n\nexport default Homepage;\n","import { graphql } from \"gatsby\"\nimport HomepageComponent from \"../components/homepage\"\n\nexport default HomepageComponent\n\nexport const query = graphql`\n  query ($formatString: String!) {\n    allPost(sort: { fields: date, order: DESC }, limit: 3) {\n      nodes {\n        slug\n        title\n        date(formatString: $formatString)\n        excerpt\n        timeToRead\n        description\n        tags {\n          name\n          slug\n        }\n      }\n    }\n  }\n`\n","import * as React from \"react\"\nimport Homepage from \"../../../components/homepage\"\n\ntype Props = {\n  data: {\n    allPost: any\n    [key: string]: string\n  }\n  [key: string]: any\n}\n\nexport default function MinimalBlogCoreHomepage({ ...props }: Props) {\n  const {\n    data: { allPost },\n  } = props\n\n  return <Homepage posts={allPost.nodes} {...props} />\n}\n","import * as React from \"react\"\nimport { Link as TLink } from \"theme-ui\"\nimport { Link } from \"gatsby\"\nimport useMinimalBlogConfig from \"../hooks/use-minimal-blog-config\"\nimport replaceSlashes from \"../utils/replaceSlashes\"\n\ntype TagsProps = {\n  tags: {\n    name: string\n    slug: string\n  }[]\n}\n\nconst ItemTags = ({ tags }: TagsProps) => {\n  const { tagsPath, basePath } = useMinimalBlogConfig()\n\n  return (\n    <React.Fragment>\n      {tags.map((tag, i) => (\n        <React.Fragment key={tag.slug}>\n          {!!i && `, `}\n          <TLink as={Link} to={replaceSlashes(`/${basePath}/${tagsPath}/${tag.slug}`)}>\n            {tag.name}\n          </TLink>\n        </React.Fragment>\n      ))}\n    </React.Fragment>\n  )\n}\n\nexport default ItemTags\n","/** @jsx jsx */\nimport * as React from \"react\"\nimport { jsx, Link as TLink, Box } from \"theme-ui\"\nimport { Link } from \"gatsby\"\nimport ItemTags from \"./item-tags\"\n\ntype BlogListItemProps = {\n  post: {\n    slug: string\n    title: string\n    date: string\n    excerpt: string\n    description: string\n    timeToRead?: number\n    tags?: {\n      name: string\n      slug: string\n    }[]\n  }\n  showTags?: boolean\n}\n\nconst BlogListItem = ({ post, showTags = true }: BlogListItemProps) => (\n  <Box mb={4}>\n    <TLink as={Link} to={post.slug} sx={{ fontSize: [1, 2, 3], color: `text` }}>\n      {post.title}\n    </TLink>\n    <p sx={{ color: `secondary`, mt: 1, a: { color: `secondary` }, fontSize: [1, 1, 2] }}>\n      <time>{post.date}</time>\n      {post.tags && showTags && (\n        <React.Fragment>\n          {` — `}\n          <ItemTags tags={post.tags} />\n        </React.Fragment>\n      )}\n    </p>\n  </Box>\n)\n\nexport default BlogListItem\n","/** @jsx jsx */\nimport { jsx, useColorMode } from \"theme-ui\";\nimport BlogListItem from \"./blog-list-item\";\nimport styled from \"@emotion/styled\";\n\ntype StyledListingProps = {\n  isDark: boolean;\n};\n\ntype ListingProps = {\n  posts: {\n    slug: string;\n    title: string;\n    date: string;\n    excerpt: string;\n    description: string;\n    timeToRead?: number;\n    tags?: {\n      name: string;\n      slug: string;\n    }[];\n  }[];\n  className?: string;\n  showTags?: boolean;\n};\nconst StyledListing = styled.section<StyledListingProps>`\n  background: ${({ isDark }) => !isDark && `#ffffff`};\n`;\n\nconst Listing = ({ posts, className = ``, showTags = true }: ListingProps) => {\n  const [colorMode] = useColorMode();\n\n  return (\n    <StyledListing\n      isDark={colorMode === \"dark\"}\n      sx={{ mb: [5, 6, 7] }}\n      className={className}\n    >\n      {posts.map((post) => (\n        <BlogListItem key={post.slug} post={post} showTags={showTags} />\n      ))}\n    </StyledListing>\n  );\n};\n\nexport default Listing;\n"],"sourceRoot":""}