{"version":3,"file":"component---node-modules-lekoarts-gatsby-theme-minimal-blog-core-src-templates-blog-query-tsx-0a9dfde9659e33341b55.js","mappings":"oQAqDA,EA7Ba,SAAC,GAA2B,IAAzBA,EAAwB,EAAxBA,MACd,GAA+BC,EAAAA,EAAAA,KAAvBC,EAAR,EAAQA,SAAUC,EAAlB,EAAkBA,SAElB,OACE,QAAC,IAAD,MACE,QAAC,IAAD,CAAKC,MAAM,UACX,QAAC,KAAD,CACEC,GAAI,CACFC,WAAW,SACXC,eAAe,gBACfC,SAAS,UAGX,QAAC,KAAD,CAASC,GAAG,KAAKC,QAAQ,YAAYL,GAAI,CAAEM,QAAS,IAApD,SAGA,QAAC,KAAD,CACEF,GAAIG,EAAAA,KACJP,GAAI,CAAEK,QAAQ,kBAAoBC,QAAS,GAC3CE,IAAIC,EAAAA,EAAAA,GAAe,IAAIX,EAAL,IAAiBD,IAHrC,mBAQF,QAAC,IAAD,CAASF,MAAOA,EAAOK,GAAI,CAAEU,GAAI,CAAC,EAAG,QC7C3C,MCQe,YAAmD,IAAjBC,EAAgB,oBAErDC,EACND,EADFE,KAAQD,QAGV,OAAO,gBAAC,EAAD,eAAMjB,MAAOiB,EAAQE,OAAWH,M,+ECkBzC,IArBiB,SAAC,GAAyB,IAAvBI,EAAsB,EAAtBA,KAClB,GAA+BnB,EAAAA,EAAAA,KAAvBC,EAAR,EAAQA,SAAUC,EAAlB,EAAkBA,SAElB,OACE,gBAAC,WAAD,KACGiB,EAAKC,KAAI,SAACC,EAAKC,GAAN,OACR,gBAAC,WAAD,CAAgBC,IAAKF,EAAIG,QACpBF,GAAF,KACD,gBAAC,KAAD,CACElB,GAAI,CAAEqB,SAAU,CAAC,GAAK,GAAK,IAC3BjB,GAAIG,EAAAA,KACJC,IAAIC,EAAAA,EAAAA,GAAe,IAAIX,EAAL,IAAiBD,EAAjB,IAA6BoB,EAAIG,OAElDH,EAAIK,a,0JCHXC,GAAYC,EAAAA,EAAAA,GAAOC,EAAAA,GAAPD,CAAH,mIAOTE,GAAcF,EAAAA,EAAAA,GAAOG,EAAAA,GAAPH,CAAH,+NAWXI,EAAoBJ,EAAAA,EAAAA,EAAH,2MA+CvB,EArCqB,SAAC,GAAD,IAAGK,EAAH,EAAGA,KAAH,IAASC,SAAAA,OAAT,gBACnB,QAACP,EAAD,MACE,QAACG,EAAD,CACEtB,GAAIG,EAAAA,KACJC,GAAIqB,EAAKT,KACTpB,GAAI,CAAEqB,SAAU,CAAC,EAAG,EAAG,GAAIU,MAAM,SAEhCF,EAAK9B,QAER,aACEC,GAAI,CACF+B,MAAM,YACNrB,GAAI,EACJsB,EAAG,CAAED,MAAM,aACXV,SAAU,CAAC,EAAG,EAAG,MAGnB,oBAAOQ,EAAKI,MACXJ,EAAKd,MAAQe,IACZ,QAAC,WAAD,YAEE,QAAC,IAAD,CAAUf,KAAMc,EAAKd,UAI3B,QAACa,EAAD,CACE5B,GAAI,CACF+B,MAAM,YACNrB,GAAI,EACJsB,EAAG,CAAED,MAAM,eAGZF,EAAKK,eC1DNC,EAAgBX,EAAAA,EAAAA,QAAH,0GAqBnB,EAhBgB,SAAC,GAA8D,IAA5D7B,EAA2D,EAA3DA,MAA2D,IAApDyC,UAAAA,OAAoD,eAApCN,SAAAA,OAAoC,SACrEO,GAAaC,EAAAA,EAAAA,MAApB,GAEA,OACE,QAACH,EAAD,CACEI,OAAsB,SAAdF,EACRrC,GAAI,CAAEwC,GAAI,CAAC,EAAG,EAAG,IACjBJ,UAAWA,GAEVzC,EAAMqB,KAAI,SAACa,GAAD,OACT,QAAC,EAAD,CAAcV,IAAKU,EAAKT,KAAMS,KAAMA,EAAMC,SAAUA","sources":["webpack://minimal-blog/./src/@lekoarts/gatsby-theme-minimal-blog/components/blog.tsx","webpack://minimal-blog/./node_modules/@lekoarts/gatsby-theme-minimal-blog-core/src/templates/blog-query.tsx","webpack://minimal-blog/./src/@lekoarts/gatsby-theme-minimal-blog/@lekoarts/gatsby-theme-minimal-blog-core/components/blog.tsx","webpack://minimal-blog/./src/@lekoarts/gatsby-theme-minimal-blog/components/item-tags.tsx","webpack://minimal-blog/./src/@lekoarts/gatsby-theme-minimal-blog/components/blog-list-item.tsx","webpack://minimal-blog/./src/@lekoarts/gatsby-theme-minimal-blog/components/listing.tsx"],"sourcesContent":["/** @jsx jsx */\nimport { jsx, Heading, Link as TLink, Flex } from \"theme-ui\";\nimport { Link } from \"gatsby\";\nimport Layout from \"./layout\";\nimport Listing from \"./listing\";\nimport useMinimalBlogConfig from \"../hooks/use-minimal-blog-config\";\nimport replaceSlashes from \"../utils/replaceSlashes\";\nimport Seo from \"./seo\";\n\ntype PostsProps = {\n  posts: {\n    slug: string;\n    title: string;\n    date: string;\n    excerpt: string;\n    description: string;\n    timeToRead?: number;\n    tags?: {\n      name: string;\n      slug: string;\n    }[];\n  }[];\n};\n\nconst Blog = ({ posts }: PostsProps) => {\n  const { tagsPath, basePath } = useMinimalBlogConfig();\n\n  return (\n    <Layout>\n      <Seo title=\"Blog\" />\n      <Flex\n        sx={{\n          alignItems: `center`,\n          justifyContent: `space-between`,\n          flexFlow: `wrap`,\n        }}\n      >\n        <Heading as=\"h1\" variant=\"styles.h1\" sx={{ marginY: 2 }}>\n          Blog\n        </Heading>\n        <TLink\n          as={Link}\n          sx={{ variant: `links.secondary`, marginY: 2 }}\n          to={replaceSlashes(`/${basePath}/${tagsPath}`)}\n        >\n          View all tags\n        </TLink>\n      </Flex>\n      <Listing posts={posts} sx={{ mt: [4, 5] }} />\n    </Layout>\n  );\n};\n\nexport default Blog;\n","import { graphql } from \"gatsby\"\nimport BlogComponent from \"../components/blog\"\n\nexport default BlogComponent\n\nexport const query = graphql`\n  query ($formatString: String!) {\n    allPost(sort: { fields: date, order: DESC }) {\n      nodes {\n        slug\n        title\n        date(formatString: $formatString)\n        excerpt\n        timeToRead\n        description\n        tags {\n          name\n          slug\n        }\n      }\n    }\n  }\n`\n","import * as React from \"react\"\nimport Blog from \"../../../components/blog\"\n\ntype Props = {\n  data: {\n    allPost: any\n    [key: string]: string\n  }\n  [key: string]: any\n}\n\nexport default function MinimalBlogCoreBlog({ ...props }: Props) {\n  const {\n    data: { allPost },\n  } = props\n\n  return <Blog posts={allPost.nodes} {...props} />\n}\n","import * as React from \"react\";\nimport { Link as TLink } from \"theme-ui\";\nimport { Link } from \"gatsby\";\nimport useMinimalBlogConfig from \"../hooks/use-minimal-blog-config\";\nimport replaceSlashes from \"../utils/replaceSlashes\";\n\ntype TagsProps = {\n  tags: {\n    name: string;\n    slug: string;\n  }[];\n};\n\nconst ItemTags = ({ tags }: TagsProps) => {\n  const { tagsPath, basePath } = useMinimalBlogConfig();\n\n  return (\n    <React.Fragment>\n      {tags.map((tag, i) => (\n        <React.Fragment key={tag.slug}>\n          {!!i && `, `}\n          <TLink\n            sx={{ fontSize: [0.5, 0.5, 1] }}\n            as={Link}\n            to={replaceSlashes(`/${basePath}/${tagsPath}/${tag.slug}`)}\n          >\n            {tag.name}\n          </TLink>\n        </React.Fragment>\n      ))}\n    </React.Fragment>\n  );\n};\n\nexport default ItemTags;\n","/** @jsx jsx */\nimport * as React from \"react\";\nimport { jsx, Link as TLink, Box } from \"theme-ui\";\nimport { Link } from \"gatsby\";\nimport ItemTags from \"./item-tags\";\nimport styled from \"@emotion/styled\";\n\ntype BlogListItemProps = {\n  post: {\n    slug: string;\n    title: string;\n    date: string;\n    excerpt: string;\n    description: string;\n    timeToRead?: number;\n    tags?: {\n      name: string;\n      slug: string;\n    }[];\n  };\n  showTags?: boolean;\n};\n\nconst StyledBox = styled(Box)`\n  margin-bottom: 0;\n  /* border-bottom: 1px solid black; */\n  min-height: 135px;\n  padding: 24px 12px;\n`;\n\nconst StyledTLink = styled(TLink)`\n  display: block;\n  font-weight: 700;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  display: -webkit-box;\n  -webkit-line-clamp: 2;\n  -webkit-box-orient: vertical;\n  word-wrap: break-word;\n`;\n\nconst StyledDescription = styled.p`\n  overflow: hidden;\n  text-overflow: ellipsis;\n  display: -webkit-box;\n  -webkit-line-clamp: 2;\n  -webkit-box-orient: vertical;\n  word-wrap: break-word;\n  font-size: 14px;\n`;\n\nconst BlogListItem = ({ post, showTags = true }: BlogListItemProps) => (\n  <StyledBox>\n    <StyledTLink\n      as={Link}\n      to={post.slug}\n      sx={{ fontSize: [2, 2, 3], color: `text` }}\n    >\n      {post.title}\n    </StyledTLink>\n    <p\n      sx={{\n        color: `secondary`,\n        mt: 1,\n        a: { color: `secondary` },\n        fontSize: [1, 1, 2],\n      }}\n    >\n      <time>{post.date}</time>\n      {post.tags && showTags && (\n        <React.Fragment>\n          {` â€” `}\n          <ItemTags tags={post.tags} />\n        </React.Fragment>\n      )}\n    </p>\n    <StyledDescription\n      sx={{\n        color: `secondary`,\n        mt: 1,\n        a: { color: `secondary` },\n      }}\n    >\n      {post.description}\n    </StyledDescription>\n  </StyledBox>\n);\n\nexport default BlogListItem;\n","/** @jsx jsx */\nimport { jsx, useColorMode } from \"theme-ui\";\nimport BlogListItem from \"./blog-list-item\";\nimport styled from \"@emotion/styled\";\n\ntype StyledListingProps = {\n  isDark: boolean;\n};\n\ntype ListingProps = {\n  posts: {\n    slug: string;\n    title: string;\n    date: string;\n    excerpt: string;\n    description: string;\n    timeToRead?: number;\n    tags?: {\n      name: string;\n      slug: string;\n    }[];\n  }[];\n  className?: string;\n  showTags?: boolean;\n};\nconst StyledListing = styled.section<StyledListingProps>`\n  /* box-shadow: 0px 2px 20px rgba(62, 74, 107, 0.1); */\n  border-radius: 16px;\n`;\n\nconst Listing = ({ posts, className = ``, showTags = true }: ListingProps) => {\n  const [colorMode] = useColorMode();\n\n  return (\n    <StyledListing\n      isDark={colorMode === \"dark\"}\n      sx={{ mb: [5, 6, 7] }}\n      className={className}\n    >\n      {posts.map((post) => (\n        <BlogListItem key={post.slug} post={post} showTags={showTags} />\n      ))}\n    </StyledListing>\n  );\n};\n\nexport default Listing;\n"],"names":["posts","useMinimalBlogConfig","tagsPath","basePath","title","sx","alignItems","justifyContent","flexFlow","as","variant","marginY","Link","to","replaceSlashes","mt","props","allPost","data","nodes","tags","map","tag","i","key","slug","fontSize","name","StyledBox","styled","Box","StyledTLink","TLink","StyledDescription","post","showTags","color","a","date","description","StyledListing","className","colorMode","useColorMode","isDark","mb"],"sourceRoot":""}