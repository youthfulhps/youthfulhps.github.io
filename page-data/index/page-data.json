{"componentChunkName":"component---src-pages-index-js","path":"/","result":{"data":{"site":{"siteMetadata":{"title":"Youthfulhps.dev","configs":{"countOfInitialPost":10}}},"allMarkdownRemark":{"edges":[{"node":{"excerpt":"여러 컨텍스트에서 를 제공하기 시작하면서 개발 단계에 도움을 많이 받고 있다.\n가령 를 통해 단순한 UI 구현을 요청하고선,\n다른 비즈니스 로직을 짜는 것에 충분히 익숙해져 있다. 본 글에서는 구글 에널리틱스 데이터를 자연어로 분석하는 방법을 소개해보려 한다. 복잡한 분석 대시보드 설정 없이도 간단한 질문으로 원하는\n인사이트를 얻을 수 있다. 해당 는 에…","fields":{"slug":"/development/google-analytics-mcp/"},"frontmatter":{"date":"2025.09.22","title":"Google Analytics MCP를 통한 데이터 분석","description":"간만에 튜토리얼!","category":"development","draft":false,"type":null}}},{"node":{"excerpt":"브라우저들이 가지고 있는 자바스크립트 엔진은 일반적으로 표준화되어 있지만, 호환 가능한 코드의 미묘한 차이가 존재한다. 은 개발자가\n작성한 최신  기능이 담긴 한 벌의 코드를 통해 제품이 제공되는 이전 환경들과의 호환성을 유지할 수 있도록 하는 사전 설정 도구인 컴파일러 및\n변환 시스템이다. 의 기원은  코드를 로 변환하기 위해 설계된 6to5로 시작되어…","fields":{"slug":"/web/babel-transpilation/"},"frontmatter":{"date":"2025.09.05","title":"babel의 핵심 변환 파이프라인","description":"babel 생태계를 살펴봅니다.","category":"web","draft":false,"type":null}}},{"node":{"excerpt":"최근 리엑트 네이티브를 통해 사내 신사업 앱 개발을 담당하게 되었다. 사실 네이티브 플랫폼은 익숙지 않았고, 과거 세 달 정도 개발했던 경험이 분명 좋지는 못했던 기억에\n고민이 많았다. 그럼에도 프로젝트를 완수하고 싶었다. 회사에 돈을 벌어다 줄 채널을 늘려야 했고, 에자일 TF팀으로서 본보기를 보여야 했으며, 플랫폼에 한정되지 않은 리엑트 개발자가\n되고…","fields":{"slug":"/react-native/metro/"},"frontmatter":{"date":"2024.05.07","title":"Metro 번들러의 컨셉 톺아보기","description":"모듈 해석과 변환 과정을 살펴봅니다.","category":"react-native","draft":false,"type":null}}},{"node":{"excerpt":"기준시와 타임존 타임존(TimeZone)은 로컬 시간이 동일한 지역을 일컫는 말이다. 국가별로 타임존을 가지고 있고, 면적이 넓은 국가의 경우 지역별로 여러 타임존을 가지고 있는 경우도 있다.\n그나저나 타임존도 기준이 필요하다. 지구의 자전에 의해 지역별로 낮과 밤이 생겨나는데, 거리가 먼 지역 간 시간에 대한 이야기를 나눌 수 있도록 0시라 칭할 수 있…","fields":{"slug":"/javascript/timezone/"},"frontmatter":{"date":"2023.12.23","title":"자바스크립트와 타임존, 그리고 Temporal","description":"시간을 다룰 때면 손에 땀이 나요.","category":"javascript","draft":false,"type":null}}},{"node":{"excerpt":"최근 라이브러리를 제작하면서 와  모듈 시스템(이하 )에 대한 모듈 시스템 포맷이 혼란스러웠던 기억이 있다. 패키지를 빌드할 때 각각의\n모듈 시스템을 사용하는 포맷으로 빌드 결과물을 만들어 주어야 했는데, 사실 ,  등 구문 정도의 차이를 이해했을 뿐 모듈 시스템의 구조적인\n라이브러리 제작자로서 대응해 주어야 하는 작업에 대해 크게 고민해 본 적이 없었기…","fields":{"slug":"/javascript/nodejs-module-system/"},"frontmatter":{"date":"2023.11.09","title":"node.js에서 하나의 모듈 시스템을 사용하는 날이 올까","description":"호환되지 않는 node.js 모듈 시스템들의 불편한 공존을 살펴봅니다.","category":"javascript","draft":false,"type":null}}},{"node":{"excerpt":"GitGlances라는 웹과 크롬 익스텐션 제품을 동시에 만들기 위한 개발 환경 구축과 선택한 기술 스택에\n대한 늦은 회고이다. 이미 환경이 구축되어 있는 프로젝트에 합류해 개발하게 된 경험이 많아 초기 단계부터 환경을 만들어가는 작업은 낯설기도 하면서 클라이언트 개발 환경을\n다시 정리하기 좋은 경험이었다.  패키지 매니저 프로젝트 관리를 용이하게 도와주…","fields":{"slug":"/development/git-glances-skills-retrospect/"},"frontmatter":{"date":"2023.10.23","title":"웹 제품을 만들기 위한 개발 환경과 기술 스택 되짚어보기","description":"개인 프로젝트 제작 AtoZ.","category":"development","draft":false,"type":null}}},{"node":{"excerpt":"tailwind-converter 라이브러리를 출시하게 되었다. styled-components를 통해 정의된 코드레벨의 컴포넌트 스타일을 추출하여 tailwindCSS에서 제공하는 유틸리티 클래스로 변환하고, 해당 컴포넌트의 사용처를 찾아 변환된 스타일 클래스들을 할당, 최종적으로 코드를 반환하는 도구이다. 간단한 예제에서는 그럴싸하게 동작하지만, 아직…","fields":{"slug":"/development/tailwind-converter/"},"frontmatter":{"date":"2023.09.05","title":"tailwind-converter 제작기","description":"아직은 미숙합니다.","category":"development","draft":false,"type":null}}},{"node":{"excerpt":"벌써 2023년 상반기가 지나갔다. 정말 정신없이 시간이 빠르게 흐르는 것 같아, 지나간 시간에 대한\n회고와 함께 남은 하반기에 대한 목표 정리와 계획을 간단히 정리해 보려 한다. 사실 회고록을 적겠노라 시도한 적이 여러 번 있었지만 투박한 글 솜씨와 밋밋한 인생사에 접었던 적이 많았는데,\n이번 상반기는 더 바쁘고 엄격하게, 그럼에도 더 행복한 하반기를 …","fields":{"slug":"/essay/2023-first-half-retrospect/"},"frontmatter":{"date":"2023.05.14","title":"2023 상반기 회고","description":"왜이렇게 즐거운진 나도 몰라요.","category":"essay","draft":false,"type":null}}},{"node":{"excerpt":"리엑트 동시성 기능을 공부하면서 어렵고 복잡한 메커니즘이지만, 결국 사용자 경험을 개선하기 위한 목표들을 추상화해서\n기술적으로 풀어낸 결과물이라고 생각하면 꽤나 여운이 남습니다. 가령 현재 실행권을 가지고 있는 무거운 랜더링 연산 작업을 진행하면서도, 작업 처리 우선순위가 높은 사용자 이벤트에\n대한 처리 작업이 들어와 대기 중이라면, 진행 중인 작업을 즉…","fields":{"slug":"/react/concurrent-feature-hooks/"},"frontmatter":{"date":"2023.04.24","title":"긴급한 작업에 낮은 우선순위를 부여하는 리엑트 훅","description":"잠시 대기!","category":"react","draft":false,"type":null}}},{"node":{"excerpt":"최근 정규 표현식을 마주하는 일이 잦아진 것 같습니다. 주로 문자열의 유효성 검사를\n위해 작성되었던 정규 표현식들과, 에디터에서 특정 문자열 검색을 위해 정규식 검색을\n사용하곤 했는데요. 사실 정규 표현식을 사용할 때면, 이미 작성되어 있는 표현식들을 꿰맞추어 사용하거나,\n구글링해야 하는 경우가 부지기수였습니다. 해서 거창한 이유보다는, 잘 사용해 보고 …","fields":{"slug":"/javascript/regular-expression/"},"frontmatter":{"date":"2022.12.07","title":"효율적인 문자열 검색을 위한 정규 표현식","description":"해석되어가고 있는 척 그만하고 싶어요.","category":"development","draft":false,"type":null}}},{"node":{"excerpt":"보통 어플리케이션에서 최적화를 위해 메모이제이션 기법을 통해 이전에 계산한 값을 메모리에\n저장해두고, 동일하게 다시 사용할 수 있는 곳에서 재사용하여 반복적으로 발생하는 계산의\n리소스를 줄이는 기법을 사용하곤 합니다. 리엑트에서도 메모이제이션을 쉽게 구현할 수 있도록 도와주는 API들이 존재하는데요.\n리엑트 공식문서에서 우리가 잘 알고 있는 useMemo…","fields":{"slug":"/react/memoization/"},"frontmatter":{"date":"2022.09.21","title":"리엑트 메모이제이션 셀프 코칭","description":"리엑트 최적화, 적절하게 잘하고 계시나요?","category":"react","draft":false,"type":null}}},{"node":{"excerpt":"개인적으로 타입스크립트는 실무에서 사용하면서 익히기 시작해서\n약 2년 가까이 매일 사용하는 언어가 되었습니다.\n타입스크립트로 시작한 프로젝트도 있었던 반면, 자바스크립트에서\n타입스크립트로 마이그레이션해야 하는 프로젝트들도 있었는데요. 타입스크립트는 단순히 ‘자바스크립트에 타입을 부여한 언어’ 라고 생각할 수 있지만,\n최근 몇 개월동안 어설프게 시작한 타입…","fields":{"slug":"/typescript/typescript-essentials-you-should-know/"},"frontmatter":{"date":"2022.06.14","title":"타입스크립트, 글로 배웠습니다만","description":"단순히 자바스크립트에 타입을 부여한 언어라고 생각하고 싶지 않았어요.","category":"typescript","draft":false,"type":null}}},{"node":{"excerpt":"리엑트v18에서 동시성 기능을 정식으로 출시하였습니다. 대표적으로,\nAutomatic batching for fewer renders, SSR support for\nSuspense, _Fixes for Suspense behavior quirks_와 같은 내부적인\n성능 향상과, startTransition, useDeferredValue, Suspense…","fields":{"slug":"/react/react-concurrent-mode-01/"},"frontmatter":{"date":"2022.06.11","title":"리엑트 동시성 매커니즘들은 어떻게 구현되어 있을까 - 01","description":"5년이라는 시간을 투자한 리엑트 동시성 기능의 정식 릴리즈, 결국 george지는 건 나.","category":"react","draft":false,"type":null}}},{"node":{"excerpt":"사용자 경험 품질 향상을 위한 이미지 최적화에 이어\n이번 글에서는 온디멘드 이미지 리사이징을 위한 인프라 구현 과정을 정리해보려 한다. TL;DR  버킷을 생성하고 이미지를 업로드한다. 를 통해  컨텐츠를 배포한다. 라시아징,  파일 형식 변환을 위한 노드 환경 람다 함수를 구현한다. 버킷 접근 권한 및 역할을 담은 을 정의하고 람다 함수에 부여한다. 의…","fields":{"slug":"/infra/image-optimization-with-cloudfront/"},"frontmatter":{"date":"2022.05.31","title":"온디멘드 이미지 리사이징을 위한 인프라 구성","description":"모바일 환경이라면 이미지 사이즈를 줄여 보내주세요.","category":"infra","draft":false,"type":null}}},{"node":{"excerpt":"많은 이미지를 다루는 페이지의 경우, 이미지 최적화에 신경쓰지 않으면 사용자 경험 지표에서 많은 감점을 받기 쉽습니다.\n사용자 경험 지표를 측정해보면, 이미지 관련된 감점 요소들이 정말 많은데요. Properly size images Serve images in next-gen formats Defer offscreen images Image elemen…","fields":{"slug":"/web/image-optimization/"},"frontmatter":{"date":"2022.05.29","title":"사용자 경험 품질 향상을 위한 이미지 최적화","description":"브라우저에게 예쁨 받는 이미지를 랜더링하기 위한 최소한의 노력","category":"web","draft":false,"type":null}}},{"node":{"excerpt":"자바스크립트는 프로토타입 기반의 객체 지향 프로그래밍 언어입니다. 개인적으로 프로토타입에 대한 큰 그림을 이해하고 있다고 생각했는데,\n이직을 준비하면서 프로토타입만 마주하면 작아지는 제 모습을 보게 됩니다. 자연스레 프로토타입 객체로부터 상속받은 메서드를 사용하면서도, 직접 프로토타입 객체를 다룰 기회는 적었는데요.\n어쩌면 가장 익숙하지만 낯선 프로토타입…","fields":{"slug":"/javascript/javascript-prototype/"},"frontmatter":{"date":"2022.03.19","title":"자바스크립트 프로토타입 톺아보기","description":"프로토타입이 그러니까 이게 뭐냐면..","category":"javascript","draft":false,"type":null}}},{"node":{"excerpt":"최근 클라이언트 사이드 랜더링 방식을 취하고 있는 프로젝트를 로 이관하는 작업이 한창이다. 는 서버 사이드\n랜더링과 동시에 클라이언트 사이드 랜더링을 동시에 지원하기 때문에, 마이너한 빌드 이슈를 제외하면 점진적 이관이 가능했다. 이후 페이지별로 적절한 랜더링 전략을 취해야 했다. 가령, 상품 정보와 같은 정적인 정보를 제공하는 페이지의 경우 를 통해\n빌…","fields":{"slug":"/nextjs/next-isr/"},"frontmatter":{"date":"2022.01.08","title":"Incremental Static Regeneration 타임라인 이해하기","description":"증분 정적 생성의 타임라인을 살펴봅니다.","category":"nextjs","draft":false,"type":null}}},{"node":{"excerpt":"웹 개발을 하면서 정량적인 지표를 보는 것에 재미가 들린 요즘, 지표는\n엄청난 동기를 부여하곤 합니다.\n최근 Lighthouse로\n프러덕션의 사용자 경험에 대한 점수가 여럿 빨간불을 켜고 있는 것을 보고는\n이제 더 이상 최적화를 미룰 수 없겠다는 생각이 들게 되었는데요. 현재 프러덕션은 클라이언트 사이드에서 랜더링을 담당하고 있기 때문에\n검색 엔진 최적화…","fields":{"slug":"/nextjs/cra-to-next/"},"frontmatter":{"date":"2021.12.26","title":"CRA 프로젝트를 next.js로 전환해보자","description":"빌드 이슈는 고개를 들어주세요.","category":"nextjs","draft":false,"type":null}}},{"node":{"excerpt":"리덕스 사가는 ES6에 새롭게 도입된 제네레이터 (Generator) 문법을 사용하여 유용하게 비동기 처리를 할 수 있게 해줍니다.\n현재 운영 중인 프러덕션 또한, 리덕스에서 사이드 이펙트가 존재할 만한 비동기적인 비지니스 로직을 관리하기 위해 리덕스 사가 미들웨어를 사용하고 있는데요. 늘 사용하고 있는 문법이고 동작 또한 해석이 되니 작업에 문제는 없지…","fields":{"slug":"/javascript/do-I-know-javascript-generator/"},"frontmatter":{"date":"2021.11.21","title":"나는 제네레이터를 알고 사용하는 걸까?","description":"자바스크립트의 제네레이터 문법을 되새겨봅니다.","category":"javascript","draft":false,"type":null}}},{"node":{"excerpt":"클라이언트 개발을 하다보면 작업이 대기 상태가 되버리는 경우를 자주 경험합니다.\n기획과 API 개발이 완료되지 않아 기다리거나, 마이너한 기획의 변경 사항이\n발생하는 경우, 최종 산출물을 다루는 클라이언트 개발 영역에서의 수정사항은\n눈덩이처럼 불어납니다.  스펙 설계 참여하기 기획과 함께 진행되어야 하는 스펙 설계 단계는 항상 참석하고자 했습니다.\n순탄한…","fields":{"slug":"/development/benefits-specification-driven-development/"},"frontmatter":{"date":"2021.10.28","title":"OpenAPI 스펙 주도 개발을 통해 클라이언트 개발 환경을 개선하기 위한 노력들","description":"openapi generator 사용하세요!","category":"development","draft":false,"type":null}}},{"node":{"excerpt":"사내에서 사용되는 클라이언트 인프라는 이미 구축되어 있는 경우가 많아\n직접 호스팅해볼 기회가 없었는데, 마침 웹 채팅 기능이 담긴 새로운 도메인을\n호스팅할 기회가 생겨 그 과정을 정리해볼까 합니다. S3, 빌드된 정적파일 업로드하기 S3는 클라우드 스토리지 서비스입니다.\n우선, S3의 컨테이너인 버킷을 생성하고 프로젝트의 빌드된 파일을 업로드합니다.  하…","fields":{"slug":"/infra/hosting-cra-on-aws/"},"frontmatter":{"date":"2021.08.10","title":"AWS를 통해 클라이언트 호스팅하기","description":"AWS를 통해 클라이언트를 호스팅해본 경험을 공유합니다.","category":"infra","draft":false,"type":null}}}]}},"pageContext":{}},"staticQueryHashes":["3665086019"],"slicesMap":{}}