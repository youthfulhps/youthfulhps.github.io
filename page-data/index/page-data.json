{"componentChunkName":"component---src-pages-index-js","path":"/","result":{"data":{"site":{"siteMetadata":{"title":"Youthfulhps.dev","configs":{"countOfInitialPost":10}}},"allMarkdownRemark":{"edges":[{"node":{"excerpt":"사용자 경험 품질 향상을 위한 이미지 최적화에서 온디멘드 이미지 리사이징\n에 대한 이야기를 공유해드렸습니다. 이번 글에서는 CloudFront에서  를 통해 직접 구현해본 과정을 정리해보려 합니다. TL;DR S3 버킷을 생성하고 이미지를 업로드합니다. CloudFront를 통해 S3 컨텐츠를 배포합니다. 라시아징, webp 파일 형식 변환을 위한 노드 …","fields":{"slug":"/infra/image-optimization-with-cloudfront/"},"frontmatter":{"date":"May 31, 2022","title":"온디멘드 이미지 리사이징을 위한 인프라 구성","category":"infra","draft":false}}},{"node":{"excerpt":"많은 이미지를 다루는 페이지의 경우, 이미지 최적화에 신경쓰지 않으면 사용자 경험 지표에서 많은 감점을 받기 쉽습니다.\n사용자 경험 지표를 측정해보면, 이미지 관련된 감점 요소들이 정말 많은데요. Properly size images Serve images in next-gen formats Defer offscreen images Image elemen…","fields":{"slug":"/web/image-optimization/"},"frontmatter":{"date":"May 29, 2022","title":"사용자 경험 품질 향상을 위한 이미지 최적화","category":"web","draft":false}}},{"node":{"excerpt":"자바스크립트는 프로토타입 기반의 객체 지향 프로그래밍 언어입니다. 개인적으로 프로토타입에 대한 큰 그림을 이해하고 있다고 생각했는데,\n이직을 준비하면서 프로토타입만 마주하면 작아지는 제 모습을 보게 됩니다. 자연스레 프로토타입 객체로부터 상속받은 메서드를 사용하면서도, 직접 프로토타입 객체를 다룰 기회는 적었는데요.\n어쩌면 가장 익숙하지만 낯선 프로토타입…","fields":{"slug":"/javascript/javascript-prototype/"},"frontmatter":{"date":"March 19, 2022","title":"자바스크립트 프로토타입 톺아보기","category":"javascript","draft":false}}},{"node":{"excerpt":"최근 CRA 프로젝트를 넥스트로 이관하는 작업이 한창입니다. 넥스트는 서버 사이드 랜더링과 동시에 클라이언트 사이드 랜더링을\n동시에 지원하기 때문에 점진적 이관이 가능했죠. 단순히 빌드가 실패되는 문제들을 제외하면요. 이후 적절한 , ,  를 통해 서버 사이드에서 데이터 패칭이\n이루어질 수 있도록 작업했습니다. 작업할 때 서버 사이드 랜더링()보다는 정적…","fields":{"slug":"/nextjs/next-isr/"},"frontmatter":{"date":"January 08, 2022","title":"Incremental Static Regeneration 타임라인 이해하기","category":"nextjs","draft":false}}},{"node":{"excerpt":"웹 개발을 하면서 개인적으로 정량적인 지표를 보는 게 엄청난 동기를 부여합니다.\n최근 Lighthouse로\n프러덕션의 사용자 경험에 대한 점수가 여럿 빨간불을 켜고 있는 것을 보고는\n이제 더 이상 최적화를 미룰 수 없겠다는 생각이 들게 되었는데요. 현재 프러덕션은 CSR 방식으로 구성된 프로젝트였기 때문에 SEO에 취약하다는 단점이 존재했고,\n웹 사용자 …","fields":{"slug":"/nextjs/cra-to-next/"},"frontmatter":{"date":"December 26, 2021","title":"CRA 프로젝트를 next.js로 전환해보자","category":"nextjs","draft":false}}},{"node":{"excerpt":"리덕스 사가는 ES6에 새롭게 도입된 제네레이터 (Generator) 문법을 사용하여 유용하게 비동기 처리를 할 수 있게 해줍니다.\n현재 운영 중인 프러덕션 또한, 리덕스에서 사이드 이펙트가 존재할 만한 비동기적인 비지니스 로직을 관리하기 위해 리덕스 사가 미들웨어를 사용하고 있는데요. 늘 사용하고 있는 문법이고 동작 또한 해석이 되니 작업에 문제는 없지…","fields":{"slug":"/javascript/do-I-know-javascript-generator/"},"frontmatter":{"date":"November 21, 2021","title":"나는 제네레이터를 알고 사용하는 걸까?","category":"javascript","draft":false}}},{"node":{"excerpt":"실무에서 프론트엔드 개발일을 하다보면, 작업이 팬딩상태가 되버리는 경우를 자주 경험합니다. 기획, 백엔드 개발이 순차적으로 마무리된 후에\n프론트엔드 작업을 진행하는 것이 이상적이지만, 현실적으로 특정 기능 개발에 대한 킥오브와 동시에 작업이 병렬적으로 진행되는 경우가 많기 때문인데요. API 개발이 되지 않아 기다리거나, 마이너한 기획의 변경 사항이 발생…","fields":{"slug":"/development/how-to-use-openapi-generator/"},"frontmatter":{"date":"October 28, 2021","title":"API 스펙을 통한 타입세이프한 개발, 그리고 Mock Server 까지","category":"development","draft":false}}},{"node":{"excerpt":"사내에서 새로운 호스트를 구출할 기회가 생겼습니다. 기존 프러덕션들에 대한 인프라는 이미 구축되어 있는 상태여서 클라이언트를 호스팅해볼 기회가 없었는데\n마침 웹 채팅 기능이 담긴 프러덕션을 호스팅할 기회가 생겨 그 과정을 정리해볼까 합니다. S3, 빌드된 정적파일 업로드하기 S3는 인터넷 스토리지 서비스입니다. 우선, S3의 컨테이너인 버킷을 생성합니다.…","fields":{"slug":"/infra/hosting-cra-on-aws/"},"frontmatter":{"date":"August 10, 2021","title":"AWS를 통해 클라이언트 호스팅하기","category":"infra","draft":false}}}]}},"pageContext":{}},"staticQueryHashes":["2486386679","3128451518"]}